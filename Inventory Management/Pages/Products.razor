@page "/products"
@using InventoryApp
@using ECommerce
@inject IInventoryAppService inventoryAppService

<div class="column-layout products-container">
    <div class="column-layout group">
        <div class="row-layout group_1">
            <h6 class="h6">
                Products
            </h6>
            <div class="row-layout group_2">
                <IgbButton class="button button_2" products-scope>
                    <span class="material-icons">
                        add
                    </span>
                    <span>Add New Product</span>
                    <IgbRipple></IgbRipple>
                </IgbButton>
                <IgbButton Variant="ButtonVariant.Outlined" class="button" products-scope>
                    <span class="material-icons">
                        import_export
                    </span>
                    <span>Import Product</span>
                    <IgbRipple></IgbRipple>
                </IgbButton>
            </div>
        </div>
        <div class="row-layout group_1">
            <div class="row-layout group_3">
                <span class="user-input">Select not yet available in Blazor</span>
                <span class="user-input">Combo not yet available in Blazor</span>
                <IgbInput Label="Search" Outlined="false" class="user-input" products-scope>
                    <span slot="prefix">
                        <span class="material-icons icon">
                            search
                        </span>
                    </span>
                </IgbInput>
            </div>
            <IgbButton Variant="ButtonVariant.Flat" @onclick="@(e => _dropdown!.ToggleAsync(_button))" @ref="_button" class="button" products-scope>
                <span>Sort By</span>
                <span class="material-icons">
                    keyboard_arrow_down
                </span>
                <IgbRipple></IgbRipple>
            </IgbButton>
            <IgbDropdown @ref="_dropdown" class="dropdown" products-scope>
                <IgbDropdownItem>
                    Alphabetically
                </IgbDropdownItem>
                <IgbDropdownItem>
                    Recently Added
                </IgbDropdownItem>
            </IgbDropdown>
        </div>
        <div class="row-layout products">
            @foreach (var item in inventoryAppProducts)
            {
                <IgbCard Outlined="true" class="card" products-scope>
                    <IgbCardMedia class="media-content" products-scope>
                        <img src="@item.ImageURL" class="image" />
                    </IgbCardMedia>
                    <IgbCardHeader>
                        <h3 slot="title">
                            @item.Product
                        </h3>
                        <h5 slot="subtitle">
                            @item.Department
                        </h5>
                    </IgbCardHeader>
                    <IgbCardContent class="body-content" products-scope>
                        <p class="typography__body-2 text">
                            Here you can add some description of the product in more details
                        </p>
                    </IgbCardContent>
                    <IgbCardActions class="actions-content" products-scope>
                        <IgbButton Variant="ButtonVariant.Outlined" class="button_1" products-scope>
                            Edit
                            <IgbRipple></IgbRipple>
                        </IgbButton>
                        <IgbIconButton Variant="IconButtonVariant.Flat" class="icon-button" products-scope>
                            <span class="material-icons">
                                remove_red_eye
                            </span>
                            <IgbRipple></IgbRipple>
                        </IgbIconButton>
                        <IgbIconButton Variant="IconButtonVariant.Flat" class="icon-button" products-scope>
                            <span class="material-icons">
                                delete
                            </span>
                            <IgbRipple></IgbRipple>
                        </IgbIconButton>
                    </IgbCardActions>
                </IgbCard>
            }
        </div>
    </div>
    <span class="add-new-product">Dialog not yet available in Blazor</span>
    <span class="add-new-product">Dialog not yet available in Blazor</span>
</div>

@code {
    private IgbButton? _button;
    private IgbDropdown? _dropdown;
    private List<ProductsType> inventoryAppProducts = new();

    protected override async Task OnInitializedAsync()
    {
        inventoryAppProducts = await inventoryAppService.GetProducts();
    }
}
